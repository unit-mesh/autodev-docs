"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5189],{8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>i});var o=r(6540);const t={},a=o.createContext(t);function s(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(a.Provider,{value:n},e.children)}},8900:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"development/development-faq","title":"\u5f00\u53d1\u5e38\u89c1\u95ee\u9898\u89e3\u7b54","description":"EDT \u4e0e ReadAction \u95ee\u9898","source":"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/development/development-faq.md","sourceDirName":"development","slug":"/development/development-faq","permalink":"/development/development-faq","draft":false,"unlisted":false,"editUrl":"https://github.com/unit-mesh/auto-dev/tree/master/docs/docs/development/development-faq.md","tags":[],"version":"current","frontMatter":{"layout":"default","title":"\u5f00\u53d1\u5e38\u89c1\u95ee\u9898\u89e3\u7b54","nav_order":999,"parent":"\u5f00\u53d1"},"sidebar":"developmentSidebar","previous":{"title":"\u5f00\u53d1\u6307\u5357","permalink":"/development/"},"next":{"title":"\u517c\u5bb9\u6027\u7b56\u7565","permalink":"/development/compatible-strategy"}}');var t=r(4848),a=r(8453);const s={layout:"default",title:"\u5f00\u53d1\u5e38\u89c1\u95ee\u9898\u89e3\u7b54",nav_order:999,parent:"\u5f00\u53d1"},i=void 0,c={},l=[{value:"EDT \u4e0e ReadAction \u95ee\u9898",id:"edt-\u4e0e-readaction-\u95ee\u9898",level:2},{value:"API \u517c\u5bb9\u6027\u65b9\u6848",id:"api-\u517c\u5bb9\u6027\u65b9\u6848",level:2},{value:"java.lang.Throwable: \u5fc5\u987b\u5728\u8fdb\u5ea6\u6307\u793a\u5668\u4e0b\u6267\u884c\uff1acom.intellij.openapi.progress.EmptyProgressIndicator@6c3fd0d8\uff0c\u4f46\u5f53\u524d\u8fdb\u7a0b\u8fd0\u884c\u5728\u7a7a\u6307\u793a\u5668\u4e0b\u3002\u8bf7\u53c2\u8003\u793a\u4f8b\uff1aProgressManager.runProcess()",id:"javalangthrowable-\u5fc5\u987b\u5728\u8fdb\u5ea6\u6307\u793a\u5668\u4e0b\u6267\u884ccomintellijopenapiprogressemptyprogressindicator6c3fd0d8\u4f46\u5f53\u524d\u8fdb\u7a0b\u8fd0\u884c\u5728\u7a7a\u6307\u793a\u5668\u4e0b\u8bf7\u53c2\u8003\u793a\u4f8bprogressmanagerrunprocess",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"edt-\u4e0e-readaction-\u95ee\u9898",children:"EDT \u4e0e ReadAction \u95ee\u9898"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"\u5728ReadAction\u4e0b\u7684\u540c\u6b65\u6267\u884c\uff1a/usr/local/bin/git -c credential.helper= -c core"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u89e3\u51b3\u65b9\u6848\u793a\u4f8b\u5982\u4e0b\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'/**\n * \u53c2\u8003[com.intellij.execution.process.OSProcessHandler.checkEdtAndReadAction]\uff0c\u6211\u4eec\u5e94\u8be5\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u5904\u7406\uff0c\n * \u53e6\u4e00\u4e2a\u793a\u4f8b\u53ef\u67e5\u770b[git4idea.GitPushUtil.findOrPushRemoteBranch]\n */\nval future = CompletableFuture<List<GitCommit>>()\nval task = object : Task.Backgroundable(project, "xx", false) {\n    override fun run(indicator: ProgressIndicator) {\n        // \u957f\u65f6\u95f4\u64cd\u4f5c\n        future.complete(/* \u63d0\u4ea4\u5217\u8868 */)\n    }\n}\n\nProgressManager.getInstance()\n    .runProcessWithProgressAsynchronously(task, BackgroundableProcessIndicator(task))\n\nrunBlockingCancellable {\n    val commits = future.await()\n    // \u540e\u7eed\u5904\u7406\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"api-\u517c\u5bb9\u6027\u65b9\u6848",children:"API \u517c\u5bb9\u6027\u65b9\u6848"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/JetBrains/aws-toolkit-jetbrains/tree/ccee3307fe58ad48f93cd780d4378c336ee20548/jetbrains-core",children:"https://github.com/JetBrains/aws-toolkit-jetbrains/tree/ccee3307fe58ad48f93cd780d4378c336ee20548/jetbrains-core"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"// \u7248\u6743 2021 Amazon.com, Inc. \u6216\u5176\u5173\u8054\u516c\u53f8\u3002\u4fdd\u7559\u6240\u6709\u6743\u5229\u3002\n// SPDX-License-Identifier: Apache-2.0\npackage software.aws.toolkits.jetbrains.core.docker.compatability\n\ntypealias DockerFileAddOrCopyCommand = com.intellij.docker.dockerFile.parser.psi.DockerFileAddOrCopyCommand\ntypealias DockerFileCmdCommand = com.intellij.docker.dockerFile.parser.psi.DockerFileCmdCommand\ntypealias DockerFileExposeCommand = com.intellij.docker.dockerFile.parser.psi.DockerFileExposeCommand\ntypealias DockerFileFromCommand = com.intellij.docker.dockerFile.parser.psi.DockerFileFromCommand\ntypealias DockerFileWorkdirCommand = com.intellij.docker.dockerFile.parser.psi.DockerFileWorkdirCommand\n"})}),"\n",(0,t.jsx)(n.h2,{id:"javalangthrowable-\u5fc5\u987b\u5728\u8fdb\u5ea6\u6307\u793a\u5668\u4e0b\u6267\u884ccomintellijopenapiprogressemptyprogressindicator6c3fd0d8\u4f46\u5f53\u524d\u8fdb\u7a0b\u8fd0\u884c\u5728\u7a7a\u6307\u793a\u5668\u4e0b\u8bf7\u53c2\u8003\u793a\u4f8bprogressmanagerrunprocess",children:"java.lang.Throwable: \u5fc5\u987b\u5728\u8fdb\u5ea6\u6307\u793a\u5668\u4e0b\u6267\u884c\uff1acom.intellij.openapi.progress.EmptyProgressIndicator@6c3fd0d8\uff0c\u4f46\u5f53\u524d\u8fdb\u7a0b\u8fd0\u884c\u5728\u7a7a\u6307\u793a\u5668\u4e0b\u3002\u8bf7\u53c2\u8003\u793a\u4f8b\uff1aProgressManager.runProcess()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:' val future = CompletableFuture<String>()\nval task = object : Task.Backgroundable(project, "\u52a0\u8f7d\u4e2d", false) {\n    override fun run(indicator: ProgressIndicator) {\n        // collectApis \u6307\u5411\u4f60\u7684\u957f\u65f6\u95f4\u64cd\u4f5c\n        future.complete(this.collectApis(project, endpointsProviderList))\n    }\n}\n\nProgressManager.getInstance()\n    .runProcessWithProgressAsynchronously(task, BackgroundableProcessIndicator(task))\n\nreturn future.get()\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);