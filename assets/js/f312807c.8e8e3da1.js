"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1381],{4383:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"mcp/mcp-debugger","title":"MCP Debugger","description":"AutoDev MCP debugger","source":"@site/docs/mcp/mcp-debugger.md","sourceDirName":"mcp","slug":"/mcp/mcp-debugger","permalink":"/auto-dev/docs/mcp/mcp-debugger","draft":false,"unlisted":false,"editUrl":"https://github.com/unit-mesh/auto-dev/tree/master/docs/docs/mcp/mcp-debugger.md","tags":[],"version":"current","frontMatter":{"layout":"default","title":"MCP Debugger","nav_order":4,"parent":"MCP","permalink":"/mcp/mcp-debugger"},"sidebar":"tutorialSidebar","previous":{"title":"AutoDev as MCP Client","permalink":"/auto-dev/docs/mcp/mcp-client"},"next":{"title":"AutoDev as MCP Server","permalink":"/auto-dev/docs/mcp/mcp-server"}}');var c=n(4848),o=n(8453);const s={layout:"default",title:"MCP Debugger",nav_order:4,parent:"MCP",permalink:"/mcp/mcp-debugger"},i=void 0,d={},u=[{value:"AutoDev MCP debugger",id:"autodev-mcp-debugger",level:2}];function a(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.h2,{id:"autodev-mcp-debugger",children:"AutoDev MCP debugger"}),"\n",(0,c.jsx)("img",{src:"https://unitmesh.cc/auto-dev/mcp-debugger.png",alt:"Inline Chat",width:"600px"}),"\n",(0,c.jsxs)(t.p,{children:["create a file end with ",(0,c.jsx)(t.code,{children:".mcp.json"})," in your project root directory, and add the following content:"]}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-json",children:'{\n  "mcpServers": {\n    "filesystem": {\n      "command": "npx",\n      "args": [\n        "-y",\n        "@modelcontextprotocol/server-filesystem",\n        "/Volumes/source/ai/autocrud"\n      ]\n    }\n  }\n}\n'})}),"\n",(0,c.jsx)(t.p,{children:"Then, click show preview in File toolbar, you can see:"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsx)(t.li,{children:"MCP Server/Tool LIST"}),"\n",(0,c.jsx)(t.li,{children:"MCP Model Configured"}),"\n",(0,c.jsx)(t.li,{children:"MCP Chat input box"}),"\n"]}),"\n",(0,c.jsx)(t.p,{children:"After send a message, you can see the response in the console:"}),"\n",(0,c.jsx)("img",{src:"https://unitmesh.cc/auto-dev/mcp-debugger-chat.png",alt:"Inline Chat",width:"600px"})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var r=n(6540);const c={},o=r.createContext(c);function s(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);