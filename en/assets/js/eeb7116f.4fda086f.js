"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6758],{4076:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var i=t(9077),r=t(4848),a=t(8453);const s={layout:"default",title:"AutoDev 1.7.0 AutoDev AI Agent",nav_order:8},o=void 0,l={authorsImageUrls:[]},c=[{value:"Custom AI Agent",id:"custom-ai-agent",level:2},{value:"1. Direct Response Example: Internal API Integration",id:"1-direct-response-example-internal-api-integration",level:2},{value:"2. Retrieval Result Example: Component Library Integration",id:"2-retrieval-result-example-component-library-integration",level:2},{value:"3. WebView Result Example: Low-code Page Generation",id:"3-webview-result-example-low-code-page-generation",level:2},{value:"Summary",id:"summary",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["In the ",(0,r.jsx)(n.a,{href:"https://github.com/unit-mesh/auto-dev/issues/51",children:"#51"})," issue of the open-source AI IDE plugin AutoDev, we designed the AI Agent capability for AutoDev. Half a year later, we have finally delivered this feature."]}),"\n",(0,r.jsx)(n.p,{children:"In AutoDev 1.7.0, you can now integrate internal AI Agents and seamlessly combine them with existing AI-assisted capabilities."}),"\n",(0,r.jsx)(n.p,{children:"Introduction paragraph text here."}),"\n",(0,r.jsxs)(n.p,{children:["This article will demonstrate how to use AutoDev's Agent capabilities through a demo combining AI Agents. For details, see the documentation: ",(0,r.jsx)(n.a,{href:"https://ide.unitmesh.cc/agent/agent.html",children:"https://ide.unitmesh.cc/agent/agent.html"}),", or refer to the source code."]}),"\n",(0,r.jsx)(n.h2,{id:"custom-ai-agent",children:"Custom AI Agent"}),"\n",(0,r.jsx)(n.p,{children:"Background: As we know, general-purpose large language models lack internal reference materials, requiring RAG extensions. In scenarios where our documentation might be constantly updated, implementing similar functionality directly on the IDE is impractical. Therefore, we should implement such capabilities on the server side and expose interfaces to the IDE."}),"\n",(0,r.jsx)(n.p,{children:"Based on our previous experience with custom LLM implementations, we designed AutoDev's custom AI Agent capability to facilitate..."}),"\n",(0,r.jsx)(n.h2,{id:"1-direct-response-example-internal-api-integration",children:"1. Direct Response Example: Internal API Integration"}),"\n",(0,r.jsx)(n.p,{children:"Typical scenarios:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"When models lack specific knowledge. For example, when learning HarmonyOS application development, internal APIs can be deployed to accelerate learning."}),"\n",(0,r.jsx)(n.li,{children:"Internal knowledge. When dealing with extensive domain knowledge, specifications, or API information."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["In these scenarios, use ",(0,r.jsx)(n.code,{children:"Direct"})," as the response type to integrate corresponding AI Agents. Configuration example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "name": "Internal API Integration",\n  "url": "http://127.0.0.1:8765/api/agent/api-market",\n  "responseAction": "Direct"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"This configuration directly returns and processes the content."}),"\n",(0,r.jsx)(n.h2,{id:"2-retrieval-result-example-component-library-integration",children:"2. Retrieval Result Example: Component Library Integration"}),"\n",(0,r.jsx)(n.p,{children:"Typical scenarios:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Knowledge retrieval. When needing specific categories of knowledge for further communication. For example, requiring AI to select appropriate components while possessing all component information for subsequent coding."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["In these scenarios, use ",(0,r.jsx)(n.code,{children:"TextChunk"})," as the response type. Configuration example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "name": "Component Query",\n  "url": "http://127.0.0.1:8765/api/agent/component-list",\n  "responseAction": "TextChunk"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Here, the AI returns search results that can be used for subsequent conversations."}),"\n",(0,r.jsx)(n.h2,{id:"3-webview-result-example-low-code-page-generation",children:"3. WebView Result Example: Low-code Page Generation"}),"\n",(0,r.jsx)(n.p,{children:"Typical scenarios:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Frontend page generation"}),"\n",(0,r.jsx)(n.li,{children:"Low-code page generation"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"These similar scenarios often require integration with internal component libraries or RAG due to frequent issues in AI-generated frontend code. However, directly generating prototypes through AI for discussion among product managers, UX designers, and developers proves more valuable."}),"\n",(0,r.jsxs)(n.p,{children:["In these scenarios, use ",(0,r.jsx)(n.code,{children:"WebView"})," as the response type. Configuration example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "name": "Page Generation",\n  "url": "http://127.0.0.1:8765/api/agent/ux",\n  "auth": {\n    "type": "Bearer",\n    "token": "eyJhbGci"\n  },\n  "responseAction": "WebView"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"This configuration returns results in WebView format, which will be displayed in the chat interface."}),"\n",(0,r.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsx)(n.p,{children:"Within the IDE, we can treat AI Agents as a series of capability plugins to accelerate our development process."})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var i=t(6540);const r={},a=i.createContext(r);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(a.Provider,{value:n},e.children)}},9077:e=>{e.exports=JSON.parse('{"permalink":"/en/blog/2024/03/07/autodev-1-7-0","editUrl":"https://github.com/unit-mesh/auto-dev/tree/master/docs/blog/2024-03-07-autodev-1-7-0.md","source":"@site/i18n/en/docusaurus-plugin-content-blog/2024-03-07-autodev-1-7-0.md","title":"AutoDev 1.7.0 AutoDev AI Agent","description":"In the #51 issue of the open-source AI IDE plugin AutoDev, we designed the AI Agent capability for AutoDev. Half a year later, we have finally delivered this feature.","date":"2024-03-07T00:00:00.000Z","tags":[],"readingTime":2.135,"hasTruncateMarker":true,"authors":[],"frontMatter":{"layout":"default","title":"AutoDev 1.7.0 AutoDev AI Agent","nav_order":8},"unlisted":false,"prevItem":{"title":"Agent Language - DevIns","permalink":"/en/blog/2024/03/17/autodev-devins-language"},"nextItem":{"title":"AutoDev 1.6.4 Enhanced Development Experience for HarmonyOS Applications","permalink":"/en/blog/2024/02/25/autodev-1-6-4"}}')}}]);