"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6363],{6539:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"scenes/legacy-migration","title":"Legacy Migration","description":"AI-Assisted Legacy System Migration","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/scenes/legacy-migration.md","sourceDirName":"scenes","slug":"/scenes/legacy-migration","permalink":"/en/scenes/legacy-migration","draft":false,"unlisted":false,"editUrl":"https://github.com/unit-mesh/auto-dev/tree/master/docs/docs/scenes/legacy-migration.md","tags":[],"version":"current","frontMatter":{"layout":"default","title":"Legacy Migration","nav_order":1,"parent":"Scenes"},"sidebar":"tutorialSidebar","previous":{"title":"HarmonyOS [Deprecated]","permalink":"/en/scenes/harmony-os"},"next":{"title":"Scenes","permalink":"/en/scenes/"}}');var o=t(4848),s=t(8453);const a={layout:"default",title:"Legacy Migration",nav_order:1,parent:"Scenes"},r=void 0,c={},d=[{value:"AI-Assisted Legacy System Migration",id:"ai-assisted-legacy-system-migration",level:2},{value:"Generating API Test Data from Existing Code",id:"generating-api-test-data-from-existing-code",level:2},{value:"1. Generate API Test Data",id:"1-generate-api-test-data",level:3},{value:"2. Custom Prompt Integration",id:"2-custom-prompt-integration",level:3},{value:"Comments and Documentation Generation",id:"comments-and-documentation-generation",level:2},{value:"Use Custom Living Documentation for generating dynamic documentation.",id:"use-custom-living-documentation-for-generating-dynamic-documentation",level:2},{value:"PL/SQL Migration",id:"plsql-migration",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"ai-assisted-legacy-system-migration",children:"AI-Assisted Legacy System Migration"}),"\n",(0,o.jsxs)(n.p,{children:['Building upon the experience accumulated in our "',(0,o.jsx)(n.a,{href:"https://migration.ink/",children:"System Refactoring and Migration Guide"}),'," we have developed a series of AI capabilities within AutoDev to aid developers in accelerating the transformation of legacy systems.']}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Assisting in API data generation for migration testing."}),"\n",(0,o.jsx)(n.li,{children:"Facilitating knowledge management through document generation."}),"\n",(0,o.jsx)(n.li,{children:"Creating living documentation business systems based on annotated documentation."}),"\n",(0,o.jsx)(n.li,{children:"Legacy code refactoring with an object-oriented approach."}),"\n",(0,o.jsx)(n.li,{children:"Generating PL/SQL code and migrating Java code."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"generating-api-test-data-from-existing-code",children:"Generating API Test Data from Existing Code"}),"\n",(0,o.jsx)(n.h3,{id:"1-generate-api-test-data",children:"1. Generate API Test Data"}),"\n",(0,o.jsx)(n.p,{children:"Support language: Java."}),"\n",(0,o.jsx)(n.p,{children:"Screenshot EXAMPLE\uff1a"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://unitmesh.cc/auto-dev/gen-test-data.png",alt:"AutoDev Living Documentation"})}),"\n",(0,o.jsx)(n.p,{children:'Simply right-click on the Java Controller code, select "Generate Test Data (APIs)," and API test data will be generated.'}),"\n",(0,o.jsx)(n.h3,{id:"2-custom-prompt-integration",children:"2. Custom Prompt Integration"}),"\n",(0,o.jsxs)(n.p,{children:["goto: ",(0,o.jsx)(n.code,{children:"Settings"})," -> ",(0,o.jsx)(n.code,{children:"Tools"})," -> ",(0,o.jsx)(n.code,{children:"AutoDev"})," -> ",(0,o.jsx)(n.code,{children:"Customize Engine prompt"}),", and add your own prompt. For example:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "spec": {\n  },\n  "prompts": [\n    {\n      "title": "Generate API test cases",\n      "autoInvoke": false,\n      "matchRegex": ".*",\n      "priority": 0,\n      "template": "Generate API testcases based on following information: \\n${METHOD_INPUT_OUTPUT}\\nHere is the code:\\n${SELECTION}"\n    }\n  ],\n  "documentations": []\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"comments-and-documentation-generation",children:"Comments and Documentation Generation"}),"\n",(0,o.jsxs)(n.p,{children:["Select the corresponding code, right-click, and choose ",(0,o.jsx)(n.code,{children:"Generate Documentation"})," to generate documentation."]}),"\n",(0,o.jsxs)(n.h2,{id:"use-custom-living-documentation-for-generating-dynamic-documentation",children:["Use ",(0,o.jsx)(n.a,{href:"/custom/living-documentation",children:"Custom Living Documentation"})," for generating dynamic documentation."]}),"\n",(0,o.jsx)(n.p,{children:"Screenshot EXAMPLE\uff1a"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://unitmesh.cc/auto-dev/autodev-living-doc.png",alt:"AutoDev Living Documentation"})}),"\n",(0,o.jsxs)(n.p,{children:["Configuration: ",(0,o.jsx)(n.code,{children:"Settings"})," -> ",(0,o.jsx)(n.code,{children:"Tools"})," -> ",(0,o.jsx)(n.code,{children:"AutoDev"})," -> ",(0,o.jsx)(n.code,{children:"Customize Engine prompt"}),", add custom formats for living documentation. Example:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "spec": {\n  },\n  "prompts": [\n  ],\n  "documentations": [\n    {\n      "title": "Living Documentation",\n      "prompt": "Write Living Documentation. Return in the following format: ",\n      "start": "",\n      "end": "",\n      "type": "annotated",\n      "example": {\n        "question": "public BookMeetingRoomResponse bookMeetingRoom(@RequestBody BookMeetingRoomRequest request) {\\n        MeetingRoom meetingRoom = meetingRoomService.bookMeetingRoom(request.getMeetingRoomId());\\n        BookMeetingRoomResponse response = new BookMeetingRoomResponse();\\n        BeanUtils.copyProperties(meetingRoom, response);\\n        return response;\\n    }",\n        "answer": "    @ScenarioDescription(\\n        given = \\"there is a meeting room available with ID 123\\",\\n        when = \\"a user books the meeting room with ID 123\\",\\n        then = \\"the booking response should contain the details of the booked meeting room\\"\\n    )"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"plsql-migration",children:"PL/SQL Migration"}),"\n",(0,o.jsx)(n.p,{children:"AutoDev has been supporting basic PL/SQL migration since version 1.5.5."}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Select PL/SQL code."}),"\n",(0,o.jsxs)(n.li,{children:["Right-click and choose:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Generate Entity"}),"\n",(0,o.jsx)(n.li,{children:"Generate Test Cases"}),"\n",(0,o.jsx)(n.li,{children:"Generate Java Code"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Screenshot EXAMPLE\uff1a"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://unitmesh.cc/auto-dev/autodev-sql-migration.png",alt:"SQL Migration"})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(6540);const o={},s=i.createContext(o);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);