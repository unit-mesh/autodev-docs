"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5132],{4293:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var s=i(8187),t=i(4848),a=i(8453);const o={layout:"default",title:"AutoDev Planner"},l=void 0,r={authorsImageUrls:[]},d=[{value:"Insight 1: Visibility of AI Coding Task Progress",id:"insight-1-visibility-of-ai-coding-task-progress",level:2},{value:"Copilot Workspace: Early Explicit AI Tasks",id:"copilot-workspace-early-explicit-ai-tasks",level:3},{value:"Cursor: Implicit Task Automation with Retries",id:"cursor-implicit-task-automation-with-retries",level:3},{value:"JetBrains Junie: Dynamic AI Task Planning",id:"jetbrains-junie-dynamic-ai-task-planning",level:3},{value:"Insight 2: The Potential of Reasoning Models in Task Planning",id:"insight-2-the-potential-of-reasoning-models-in-task-planning",level:2},{value:"AutoDev Planner: Task Planning for Agent Programming",id:"autodev-planner-task-planning-for-agent-programming",level:2},{value:"Key Point 1: Reasoning Model-Based Planning",id:"key-point-1-reasoning-model-based-planning",level:3},{value:"Key Point 2: Interactive Task Planning",id:"key-point-2-interactive-task-planning",level:3},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const n={a:"a",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Recently, we've implemented a new feature in AutoDev: AutoDev Planner, a coding task planning functionality built on the DeepSeek R1 reasoning model. Of course, besides DeepSeek R1, you can also use other models."}),"\n",(0,t.jsx)(n.p,{children:"In AutoDev Planner, AI will generate a task plan for subsequent coding based on your input and collected context. This coding plan can then be used with other instruction-following models like DeepSeek V3 to generate code, edit code, etc."}),"\n",(0,t.jsx)(n.h2,{id:"insight-1-visibility-of-ai-coding-task-progress",children:"Insight 1: Visibility of AI Coding Task Progress"}),"\n",(0,t.jsx)(n.p,{children:"When designing AI coding agents, an interesting consideration is how users perceive coding task progress - whether they should explicitly see the progress or implicitly sense it."}),"\n",(0,t.jsx)(n.h3,{id:"copilot-workspace-early-explicit-ai-tasks",children:"Copilot Workspace: Early Explicit AI Tasks"}),"\n",(0,t.jsx)(n.p,{children:"Last year, I experimented with GitHub Copilot Workspace for frontend development. After trying dozens of small requirements (even simple i18n translations), its performance didn't meet expectations, likely limited by GPT-4's capabilities. However, Copilot Workspace's approach remains valuable:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Brainstorm. Conduct brainstorming for user tasks"}),"\n",(0,t.jsx)(n.li,{children:"Task. Convert tasks into editable plans"}),"\n",(0,t.jsx)(n.li,{children:"Execute. Execute plans to generate code Pull Requests"}),"\n",(0,t.jsx)(n.li,{children:"PR. Submit changes as Pull Requests"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Users can explicitly observe AI's thinking, editing, and execution processes, though it doesn't dynamically adjust plans (based on 2024 understanding)."}),"\n",(0,t.jsx)(n.h3,{id:"cursor-implicit-task-automation-with-retries",children:"Cursor: Implicit Task Automation with Retries"}),"\n",(0,t.jsx)(n.p,{children:"The popular AI coding tool Cursor provides excellent AI Editor experience:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Automatically collects IDE context"}),"\n",(0,t.jsx)(n.li,{children:"Edits code"}),"\n",(0,t.jsx)(n.li,{children:"Automatically fixes lint issues and retries on errors"}),"\n",(0,t.jsx)(n.li,{children:"..."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"While users can vaguely understand AI operations through text, frequent retries quickly obscure the process."}),"\n",(0,t.jsx)(n.h3,{id:"jetbrains-junie-dynamic-ai-task-planning",children:"JetBrains Junie: Dynamic AI Task Planning"}),"\n",(0,t.jsx)(n.p,{children:"The latest AI coding tool JetBrains Junie offers dynamic task planning:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Analyzes problems and generates task plans"}),"\n",(0,t.jsx)(n.li,{children:"Executes tasks step-by-step with contextual awareness"}),"\n",(0,t.jsx)(n.li,{children:"Dynamically adjusts plans during execution"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Users can observe continuous plan adjustments until task completion or termination."}),"\n",(0,t.jsx)(n.h2,{id:"insight-2-the-potential-of-reasoning-models-in-task-planning",children:"Insight 2: The Potential of Reasoning Models in Task Planning"}),"\n",(0,t.jsx)(n.p,{children:"As we know, 2024's reasoning models (\"deep-thinking models\") have expanded possibilities. Through experiments in AutoDev Sketch (similar to Cursor Composer's auto-coding agent), we found DeepSeek R1 outperforms other domestic models in tool invocation (based on DevIns instructions) with same context. Compared to DeepSeek V3, R1 utilizes more tools."}),"\n",(0,t.jsx)(n.p,{children:"Ideally, we should use R1 for initial tool dialogue and secondary task planning, but its slower speed (equivalent to extra API calls) remains a constraint. However, R1's advantages remain evident, and we believe others share similar experiences."}),"\n",(0,t.jsx)(n.p,{children:"Of course, large-scale experiments haven't been conducted due to the significant effort required to build comprehensive test datasets."}),"\n",(0,t.jsx)(n.h2,{id:"autodev-planner-task-planning-for-agent-programming",children:"AutoDev Planner: Task Planning for Agent Programming"}),"\n",(0,t.jsx)(n.p,{children:"Based on these insights, we developed the new anthropomorphic feature: AutoDev Planner to enhance Sketch's task planning capabilities. Core features include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Visible Task Planning"}),": Track progress through Pin and Planner ToolWindow"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dynamic Planning"}),": AI adjusts plans contextually (model-dependent)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Manual Task Execution"}),": Users can manually execute pending tasks"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Plan Review"}),": Manual model invocation for plan review (automatic review avoided due to token costs)"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The core concept remains simple: invoke models to generate plans and display interactions."}),"\n",(0,t.jsx)(n.h3,{id:"key-point-1-reasoning-model-based-planning",children:"Key Point 1: Reasoning Model-Based Planning"}),"\n",(0,t.jsx)(n.p,{children:"Since reasoning models differ from regular models in prompt understanding and instruction following, we redesigned prompts for R1 compatibility."}),"\n",(0,t.jsx)(n.p,{children:"After initial context collection and reasoning model configuration, R1 generates task plans containing: tasks, steps, and progress status. These plans are then displayed to users."}),"\n",(0,t.jsx)(n.h3,{id:"key-point-2-interactive-task-planning",children:"Key Point 2: Interactive Task Planning"}),"\n",(0,t.jsx)(n.p,{children:"Unlike other AI coding tools, we emphasize task planning as critical interaction:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Status Display"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Completed tasks marked"}),"\n",(0,t.jsx)(n.li,{children:"Manual execution for pending tasks"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Pin"}),": Pin tasks to IDE locations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"File Interaction"}),": Click filenames in tasks to open files"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Editing"}),": Pause and adjust unsuitable plans"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Review"}),": Manual plan review invocation"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Visualizing tasks enhances AI coding experience - the original intention of AutoDev Planner."}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(n.p,{children:"AutoDev Planner is a reasoning model-based task planning feature that helps users better understand AI coding progress and adjust plans. While still imperfect, we welcome issues and PRs on GitHub."}),"\n",(0,t.jsxs)(n.p,{children:["Download the latest version: ",(0,t.jsx)(n.a,{href:"https://github.com/unit-mesh/auto-dev/releases",children:"https://github.com/unit-mesh/auto-dev/releases"})]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8187:e=>{e.exports=JSON.parse('{"permalink":"/en/blog/2025/03/18/autodev-planner","editUrl":"https://github.com/unit-mesh/auto-dev/tree/master/docs/blog/2025-03-18-autodev-planner.md","source":"@site/i18n/en/docusaurus-plugin-content-blog/2025-03-18-autodev-planner.md","title":"AutoDev Planner","description":"Recently, we\'ve implemented a new feature in AutoDev: AutoDev Planner, a coding task planning functionality built on the DeepSeek R1 reasoning model. Of course, besides DeepSeek R1, you can also use other models.","date":"2025-03-18T00:00:00.000Z","tags":[],"readingTime":3.335,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"default","title":"AutoDev Planner"},"unlisted":false,"prevItem":{"title":"AutoDev 2.0 Officially Released! Agents x Open Source Ecosystem = Infinite Possibilities","permalink":"/en/blog/2025/03/26/autodev-2-0"},"nextItem":{"title":"AutoDev MCP","permalink":"/en/blog/2025/03/12/autodev-mcp"}}')},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(6540);const t={},a=s.createContext(t);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);