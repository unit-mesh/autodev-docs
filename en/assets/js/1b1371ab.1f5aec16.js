"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9199],{7218:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"development/development-faq","title":"Development FAQ","description":"EDT and ReadAction issue","source":"@site/docs/development/development-faq.md","sourceDirName":"development","slug":"/development/development-faq","permalink":"/en/development/development-faq","draft":false,"unlisted":false,"editUrl":"https://github.com/unit-mesh/auto-dev/tree/master/docs/docs/development/development-faq.md","tags":[],"version":"current","frontMatter":{"layout":"default","title":"Development FAQ","nav_order":999,"parent":"Development"},"sidebar":"tutorialSidebar","previous":{"title":"Development","permalink":"/en/development/"},"next":{"title":"Git Commit","permalink":"/en/development/git-commit-prompting"}}');var o=r(4848),s=r(8453);const i={layout:"default",title:"Development FAQ",nav_order:999,parent:"Development"},a=void 0,c={},l=[{value:"EDT and ReadAction issue",id:"edt-and-readaction-issue",level:2},{value:"API \u517c\u5bb9\u65b9\u6848",id:"api-\u517c\u5bb9\u65b9\u6848",level:2},{value:"java.lang.Throwable: Must be executed under progress indicator: com.intellij.openapi.progress.EmptyProgressIndicator@6c3fd0d8 but the process is running under null indicator instead. Please see e.g. ProgressManager.runProcess()",id:"javalangthrowable-must-be-executed-under-progress-indicator-comintellijopenapiprogressemptyprogressindicator6c3fd0d8-but-the-process-is-running-under-null-indicator-instead-please-see-eg-progressmanagerrunprocess",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"edt-and-readaction-issue",children:"EDT and ReadAction issue"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Synchronous execution under ReadAction: /usr/local/bin/git -c credential.helper= -c core"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"A solution will be like:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'/**\n * Refs to [com.intellij.execution.process.OSProcessHandler.checkEdtAndReadAction], we should handle in this\n * way, another example can see in [git4idea.GitPushUtil.findOrPushRemoteBranch]\n */\nval future = CompletableFuture<List<GitCommit>>()\nval task = object : Task.Backgroundable(project, "xx", false) {\n    override fun run(indicator: ProgressIndicator) {\n        // some long time operation\n        future.complete(/* commits */)\n    }\n}\n\nProgressManager.getInstance()\n    .runProcessWithProgressAsynchronously(task, BackgroundableProcessIndicator(task))\n\nrunBlockingCancellable {\n    val commits = future.await()\n    // do something\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"api-\u517c\u5bb9\u65b9\u6848",children:"API \u517c\u5bb9\u65b9\u6848"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://github.com/JetBrains/aws-toolkit-jetbrains/tree/ccee3307fe58ad48f93cd780d4378c336ee20548/jetbrains-core",children:"https://github.com/JetBrains/aws-toolkit-jetbrains/tree/ccee3307fe58ad48f93cd780d4378c336ee20548/jetbrains-core"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:"// Copyright 2021 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\npackage software.aws.toolkits.jetbrains.core.docker.compatability\n\ntypealias DockerFileAddOrCopyCommand = com.intellij.docker.dockerFile.parser.psi.DockerFileAddOrCopyCommand\ntypealias DockerFileCmdCommand = com.intellij.docker.dockerFile.parser.psi.DockerFileCmdCommand\ntypealias DockerFileExposeCommand = com.intellij.docker.dockerFile.parser.psi.DockerFileExposeCommand\ntypealias DockerFileFromCommand = com.intellij.docker.dockerFile.parser.psi.DockerFileFromCommand\ntypealias DockerFileWorkdirCommand = com.intellij.docker.dockerFile.parser.psi.DockerFileWorkdirCommand\n"})}),"\n",(0,o.jsx)(n.h2,{id:"javalangthrowable-must-be-executed-under-progress-indicator-comintellijopenapiprogressemptyprogressindicator6c3fd0d8-but-the-process-is-running-under-null-indicator-instead-please-see-eg-progressmanagerrunprocess",children:"java.lang.Throwable: Must be executed under progress indicator: com.intellij.openapi.progress.EmptyProgressIndicator@6c3fd0d8 but the process is running under null indicator instead. Please see e.g. ProgressManager.runProcess()"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:' val future = CompletableFuture<String>()\nval task = object : Task.Backgroundable(project, "Loading", false) {\n    override fun run(indicator: ProgressIndicator) {\n        // collectApis point to your long time operation\n        future.complete(this.collectApis(project, endpointsProviderList))\n    }\n}\n\nProgressManager.getInstance()\n    .runProcessWithProgressAsynchronously(task, BackgroundableProcessIndicator(task))\n\nreturn future.get()\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var t=r(6540);const o={},s=t.createContext(o);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);