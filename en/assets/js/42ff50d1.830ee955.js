"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8423],{4700:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"devins/development","title":"Development DevIns","description":"Implementation /run command in different languages","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/devins/development.md","sourceDirName":"devins","slug":"/devins/development","permalink":"/en/devins/development","draft":false,"unlisted":false,"editUrl":"https://github.com/unit-mesh/auto-dev/tree/master/docs/docs/devins/development.md","tags":[],"version":"current","frontMatter":{"layout":"default","title":"Development DevIns","nav_order":99,"parent":"AI Agent Language"},"sidebar":"developmentSidebar","previous":{"title":"Agentic Testcase","permalink":"/en/development/agentic-testcase"}}');var i=t(4848),o=t(8453);const r={layout:"default",title:"Development DevIns",nav_order:99,parent:"AI Agent Language"},a=void 0,c={},d=[{value:"Implementation <code>/run</code> command in different languages",id:"implementation-run-command-in-different-languages",level:2},{value:"Resources",id:"resources",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h2,{id:"implementation-run-command-in-different-languages",children:["Implementation ",(0,i.jsx)(n.code,{children:"/run"})," command in different languages"]}),"\n",(0,i.jsxs)(n.p,{children:["Since we need to verify AI generated unit which is code, test is the best way to verify it. So most of the time, we\nuse ",(0,i.jsx)(n.code,{children:"AutoTestService"})," to run the test."]}),"\n",(0,i.jsx)(n.p,{children:"In different language, the test runner is different, like:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"C/C++ => CppAutoTestService (CMake + Catch2)"}),"\n",(0,i.jsx)(n.li,{children:"Go => GoAutoTestService"}),"\n",(0,i.jsx)(n.li,{children:"Java => JavaAutoTestService (Gradle)"}),"\n",(0,i.jsx)(n.li,{children:"Python => PythonAutoTestService"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"resources",children:"Resources"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/JetBrains/educational-plugin",children:"JetBrains Academy plugin"})," shows a very good sample on how to organize\ndifferent types of tasks in a single plugin."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["check: ",(0,i.jsx)(n.code,{children:"EduTaskCheckerBase.kt"})," for task running"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);