"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1725],{8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(6540);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}},9950:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"agent/server-example","title":"AI Agent Server","description":"AI Agent Server will be used to communicate with the AI Agent. It will be used to send the request and receive the response","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/agent/server-example.md","sourceDirName":"agent","slug":"/agent/server-example","permalink":"/en/agent/server-example","draft":false,"unlisted":false,"editUrl":"https://github.com/unit-mesh/auto-dev/tree/master/docs/docs/agent/server-example.md","tags":[],"version":"current","frontMatter":{"layout":"default","title":"AI Agent Server","parent":"Agent","nav_order":6},"sidebar":"agenticSidebar","previous":{"title":"Custom Request/Response","permalink":"/en/agent/custom-request-response"},"next":{"title":"\u672c\u5730\u667a\u80fd\u4f53","permalink":"/en/local-agent/"}}');var s=t(4848),o=t(8453);const i={layout:"default",title:"AI Agent Server",parent:"Agent",nav_order:6},a=void 0,l={},c=[{value:"Server",id:"server",level:2},{value:"Server API example",id:"server-api-example",level:3},{value:"<code>ResponseAction</code>",id:"responseaction",level:3},{value:"Request Body",id:"request-body",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"AI Agent Server will be used to communicate with the AI Agent. It will be used to send the request and receive the response\nfrom the AI Agent."}),"\n",(0,s.jsx)(n.h2,{id:"server",children:"Server"}),"\n",(0,s.jsx)(n.h3,{id:"server-api-example",children:"Server API example"}),"\n",(0,s.jsxs)(n.p,{children:["see in ",(0,s.jsx)(n.a,{href:"https://github.com/unit-mesh/auto-dev/tree/master/example/custom_agent",children:"example/custom_agent"})]}),"\n",(0,s.jsx)(n.h3,{id:"responseaction",children:(0,s.jsx)(n.code,{children:"ResponseAction"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'ResponseAction.Direct should return "SSE<String>"'}),"\n",(0,s.jsx)(n.li,{children:'ResponseAction.TextChunk should return "JSON"'}),"\n",(0,s.jsx)(n.li,{children:'ResponseAction.WebView should return "HTML" code'}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"request-body",children:"Request Body"}),"\n",(0,s.jsx)(n.p,{children:"same to Chat API"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "messages": [\n    {\n      "role": "user",\n      "content": "Hi, I want to book a flight from Hangzhou to Shanghai."\n    }\n  ]\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);