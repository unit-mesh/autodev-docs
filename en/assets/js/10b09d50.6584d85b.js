"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7978],{1151:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"workflow/auto-page","title":"AutoPage","description":"Required plugin: JavaScript","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/workflow/auto-page.md","sourceDirName":"workflow","slug":"/workflow/auto-page","permalink":"/en/workflow/auto-page","draft":false,"unlisted":false,"editUrl":"https://github.com/unit-mesh/auto-dev/tree/master/docs/docs/workflow/auto-page.md","tags":[],"version":"current","frontMatter":{"layout":"default","title":"AutoPage","nav_order":3,"parent":"Workflow"},"sidebar":"tutorialSidebar","previous":{"title":"Tech Writing","permalink":"/en/scenes/tech-writing"},"next":{"title":"AutoSQL","permalink":"/en/workflow/auto-sql"}}');var r=t(4848),i=t(8453);const s={layout:"default",title:"AutoPage",nav_order:3,parent:"Workflow"},a=void 0,l={},c=[{value:"Design Flow",id:"design-flow",level:2},{value:"Prompt Override",id:"prompt-override",level:2},{value:"Current Prompt",id:"current-prompt",level:3},{value:"Theory of AutoPage",id:"theory-of-autopage",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Required plugin: JavaScript"}),"\n",(0,r.jsxs)(n.p,{children:["Demo Video: ",(0,r.jsx)(n.a,{href:"https://www.bilibili.com/video/BV1Ye411h7Qu/",children:"https://www.bilibili.com/video/BV1Ye411h7Qu/"})]}),"\n",(0,r.jsx)(n.p,{children:"implementation: [cc.unitmesh.database.flow.AutoPageFlow]"}),"\n",(0,r.jsx)(n.h2,{id:"design-flow",children:"Design Flow"}),"\n",(0,r.jsx)(n.p,{children:"Common flow for frontend development:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"getRoutes"}),"\n",(0,r.jsx)(n.li,{children:"getComponents"}),"\n",(0,r.jsx)(n.li,{children:"getDesignSystemComponents"}),"\n",(0,r.jsx)(n.li,{children:"sampleRemoteCall"}),"\n",(0,r.jsx)(n.li,{children:"sampleStateManagement"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"prompt-override",children:"Prompt Override"}),"\n",(0,r.jsx)(n.p,{children:"Steps:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["step 1: ",(0,r.jsx)(n.code,{children:"prompts/genius/page/page-gen-clarify.vm"})]}),"\n",(0,r.jsxs)(n.li,{children:["step 2: ",(0,r.jsx)(n.code,{children:"prompts/genius/page/page-gen-design.vm"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Context:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'data class AutoPageContext(\n    val requirement: String,\n    var pages: List<String>,\n    val pageNames: List<String>,\n    var components: List<String>,\n    val componentNames: List<String>,\n    val routes: List<String>,\n    val frameworks: List<String> = listOf("React"),\n    val language: String = "JavaScript",\n)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"current-prompt",children:"Current Prompt"}),"\n",(0,r.jsx)(n.p,{children:"Clarify:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"    You are a professional Frontend developer.\n    According to the user's requirements, you should choose the best components for the user in List.\n\n    - Framework: ${context.frameworks}\n    - Language: ${context.language}\n    - User component: ${context.componentNames}, ${context.pageNames}\n    \n    For example:\n    \n    - Question(requirements): Build a form for user to fill in their information.\n    - You should anwser: [Input, Select, Radio, Checkbox, Button, Form]\n    \n    ----\n    \n    Here are the User requirements:\n    \n    ```markdown\n    ${context.requirement}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Please choose the best Components for the user, just return the components names in a list, no explain."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\nDesign:\n\n```markdown\n    You are a professional Frontend developer.\n    According to the user's requirements, and Components info, write Component for the user.\n    \n    - Framework: ${context.frameworks}\n    - Language: ${context.language}\n    - User Components Infos: ${context.components}\n    \n    For example:\n    \n    - Question(requirements): Build a form for user to fill in their information.\n      // componentName: Form, props: { fields: [{name: 'name', type: 'text'}, {name: 'age', type: 'number'}] }\n      // componentName: Input, props: { name: 'name', type: 'text' }\n      // componentName: Input, props: { name: 'age', type: 'number' }\n    - Answer:\n    <Form>\n        <Input name=\"name\" type=\"text\" />\n        <Input name=\"age\" type=\"number\" />\n    </Form>\n    \n    ----\n    \n    Here are the requirements:\n    \n    ${context.requirement}\n    \n    Please write your code with Markdown syntax, no explanation is needed:\n"})}),"\n",(0,r.jsx)(n.h2,{id:"theory-of-autopage",children:"Theory of AutoPage"}),"\n",(0,r.jsx)(n.p,{children:"Common frontend flow:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Functional bootstrap"}),"\n",(0,r.jsx)(n.li,{children:"Request Transform / Data validation, IO Handing."}),"\n",(0,r.jsx)(n.li,{children:"Process IPC/RPC Calling"}),"\n",(0,r.jsx)(n.li,{children:"Output Transform / Render"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(6540);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);