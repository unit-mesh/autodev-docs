"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7873],{4858:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"development/agentic-testcase","title":"Agentic Testcase","description":"AutoDev Sketch","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/development/agentic-testcase.md","sourceDirName":"development","slug":"/development/agentic-testcase","permalink":"/en/development/agentic-testcase","draft":false,"unlisted":false,"editUrl":"https://github.com/unit-mesh/auto-dev/tree/master/docs/docs/development/agentic-testcase.md","tags":[],"version":"current","frontMatter":{"layout":"default","title":"Agentic Testcase","nav_order":998,"parent":"Development"},"sidebar":"developmentSidebar","previous":{"title":"Unit Driven","permalink":"/en/development/patterns/unit-driven"},"next":{"title":"Development DevIns","permalink":"/en/devins/development"}}');var r=t(4848),a=t(8453);const o={layout:"default",title:"Agentic Testcase",nav_order:998,parent:"Development"},l=void 0,s={},c=[{value:"AutoDev Sketch",id:"autodev-sketch",level:2},{value:"Alpha 1",id:"alpha-1",level:3},{value:"Alpha 2",id:"alpha-2",level:3},{value:"Multiple-Language",id:"multiple-language",level:3},{value:"AutoDev Bridge",id:"autodev-bridge",level:2},{value:"Migrate database to MongoDB",id:"migrate-database-to-mongodb",level:3},{value:"Migrate from Vue2 to Vue 3",id:"migrate-from-vue2-to-vue-3",level:3},{value:"Spring Boot to Micronaut Migration",id:"spring-boot-to-micronaut-migration",level:3},{value:"Rewrite current project using Node.js",id:"rewrite-current-project-using-nodejs",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"autodev-sketch",children:"AutoDev Sketch"}),"\n",(0,r.jsx)(n.h3,{id:"alpha-1",children:"Alpha 1"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"How to merge branches in git"}),"\n",(0,r.jsx)(n.li,{children:"Add delete blog functionality"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-devin",children:"/file:src/main/java/cc/unitmesh/untitled/demo/controller/BlogController.java\n/file:src/main/java/cc/unitmesh/untitled/demo/service/BlogService.java\n/file:src/main/java/cc/unitmesh/untitled/demo/repository/BlogRepository.java\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Add delete blog by author functionality"}),"\n",(0,r.jsx)(n.li,{children:"Add category feature to Blogpost and support fetching blogs by category"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-devin",children:"/file:src/main/java/cc/unitmesh/untitled/demo/controller/BlogController.java\n/file:src/main/java/cc/unitmesh/untitled/demo/service/BlogService.java\n/file:src/main/java/cc/unitmesh/untitled/demo/repository/BlogRepository.java\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Implement DDD pattern to generate corresponding ApplicationService and DomainService"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-devin",children:"/file:src/main/java/cc/unitmesh/untitled/demo/service/BlogService.java\n/file:src/main/java/cc/unitmesh/untitled/demo/repository/BlogRepository.java\n"})}),"\n",(0,r.jsx)(n.h3,{id:"alpha-2",children:"Alpha 2"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Refactor blog functionality using DDD + rich domain model"}),"\n",(0,r.jsx)(n.li,{children:"Bash code for starting Spring Boot application with Gradle"}),"\n",(0,r.jsx)(n.li,{children:"Generate release notes from recent two weeks' code commits"}),"\n",(0,r.jsx)(n.li,{children:"Generate tests based on code changes"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"multiple-language",children:"Multiple-Language"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Add vue router using patch method"}),"\n",(0,r.jsx)(n.li,{children:"Add Element UI using patch method"}),"\n",(0,r.jsx)(n.li,{children:"Generate OpenAPI Yaml example and return in markdown yaml format"}),"\n",(0,r.jsx)(n.li,{children:"Write Go hello world program, return in markdown go format (without using write or other DevIns commands)"}),"\n",(0,r.jsx)(n.li,{children:"Create basic Swagger Yaml skeleton for OpenAPI 3.0 spec (return only Swagger Yaml without DevIns)"}),"\n",(0,r.jsx)(n.li,{children:"Design refactoring strategy based on Vue data structure:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-devin",children:"/structure:src/components/Custom/DataSelect.vue\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use line numbers and file commands to select appropriate code snippets for viewing (limited to small segments)"}),"\n",(0,r.jsx)(n.li,{children:"Generate package.json example for Vite + Jest configuration with axios and jszip dependencies"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"autodev-bridge",children:"AutoDev Bridge"}),"\n",(0,r.jsx)(n.h3,{id:"migrate-database-to-mongodb",children:"Migrate database to MongoDB"}),"\n",(0,r.jsx)(n.h3,{id:"migrate-from-vue2-to-vue-3",children:"Migrate from Vue2 to Vue 3"}),"\n",(0,r.jsx)(n.h3,{id:"spring-boot-to-micronaut-migration",children:"Spring Boot to Micronaut Migration"}),"\n",(0,r.jsx)(n.p,{children:"Spring Boot to Micronaut migration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-devin",children:"/dependencies\n/scc\n/containerView\n/dir:src\n/ripgrepSearch:JdbcTemplate\n/database:schema\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rewrite-current-project-using-nodejs",children:"Rewrite current project using Node.js"}),"\n",(0,r.jsx)(n.p,{children:"Current project APIs:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-devin",children:"/webApiView\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var i=t(6540);const r={},a=i.createContext(r);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);