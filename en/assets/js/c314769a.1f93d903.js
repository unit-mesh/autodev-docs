"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8523],{779:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var o=n(9462),i=n(4848),s=n(8453);const r={layout:"default",title:"AutoDev Coder",slug:"autodev-coder"},d=void 0,a={authorsImageUrls:[]},l=[{value:"AutoDev Coder 6.7B v1 Experimental Version",id:"autodev-coder-67b-v1-experimental-version",level:2},{value:"AutoDev Coder 64k Dataset",id:"autodev-coder-64k-dataset",level:2},{value:"FAQ: AutoDev Coder Model Evaluation",id:"faq-autodev-coder-model-evaluation",level:2},{value:"FAQ: AutoDev Instructions",id:"faq-autodev-instructions",level:2}];function c(e){const t={a:"a",h2:"h2",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"TL;DR:"}),"\n",(0,i.jsxs)(t.p,{children:["The first ",(0,i.jsx)(t.strong,{children:"barely usable"})," version of AutoDev Coder 6.7B, a coding LLM for AutoDev, is now available."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["HuggingFace homepage: ",(0,i.jsx)(t.a,{href:"https://huggingface.co/unit-mesh/autodev-coder",children:"https://huggingface.co/unit-mesh"})," (temporarily unable to provide direct downloads due to certification requirements \ud83d\udc36\ud83d\udc36)."]}),"\n",(0,i.jsxs)(t.li,{children:["Dataset download: ",(0,i.jsx)(t.a,{href:"https://huggingface.co/datasets/unit-mesh/autodev-datasets",children:"https://huggingface.co/datasets/unit-mesh/autodev-datasets"})]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["PS: Since AutoDev 1.5.1 is awaiting approval on the JetBrains Marketplace and foreign colleagues are still on vacation after holidays, the model's performance on version 1.5.1 will be ",(0,i.jsx)(t.strong,{children:"slightly"})," better than on 1.5.0."]}),"\n",(0,i.jsx)(t.p,{children:"Additionally, with improved computing power support and better completion testing, we will reintroduce the original Inlay completion mode."}),"\n",(0,i.jsx)(t.h2,{id:"autodev-coder-67b-v1-experimental-version",children:"AutoDev Coder 6.7B v1 Experimental Version"}),"\n",(0,i.jsx)(t.p,{children:"Current version is fine-tuned based on DeepSeek Coder 6.7b instruct model under LLaMA architecture."}),"\n",(0,i.jsx)(t.p,{children:"Note: As an experimental version, its primary purpose is to align the model, data tools, and IDE plugin for better coordination. Generation quality still requires further improvement."}),"\n",(0,i.jsx)(t.h2,{id:"autodev-coder-64k-dataset",children:"AutoDev Coder 64k Dataset"}),"\n",(0,i.jsx)(t.p,{children:"The instruction composition of AutoDev Coder v1 64k is as follows:"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Filename"}),(0,i.jsx)(t.th,{children:"Selected Instructions"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"java_oss.jsonl"}),(0,i.jsx)(t.td,{children:"4000"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"python_oss.jsonl"}),(0,i.jsx)(t.td,{children:"4000"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"code_bugfix_cleaned_5K.json"}),(0,i.jsx)(t.td,{children:"4000"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"codeGPT_CN_cleaned_20K.json"}),(0,i.jsx)(t.td,{children:"15000"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"code_summarization_CN_cleaned_10K.json"}),(0,i.jsx)(t.td,{children:"8000"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"code_generation_CN_cleaned_5K.json"}),(0,i.jsx)(t.td,{children:"4000"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"summary.jsonl"}),(0,i.jsx)(t.td,{children:"25000"})]})]})]}),"\n",(0,i.jsxs)(t.p,{children:["The summary.jsonl is generated by our open-source code fine-tuning data framework UnitGen (",(0,i.jsx)(t.a,{href:"https://github.com/unit-mesh/unit-gen",children:"https://github.com/unit-mesh/unit-gen"}),")."]}),"\n",(0,i.jsx)(t.p,{children:"We selected dozens of Java and Kotlin open-source projects, generating instructions based on AutoDev plugin requirements, mainly categorized into three types:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Completion (inline, interline, interblock)"}),"\n",(0,i.jsx)(t.li,{children:"Documentation generation"}),"\n",(0,i.jsx)(t.li,{children:"Comment generation"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Detailed documentation can be found in the UnitGen project: ",(0,i.jsx)(t.a,{href:"https://github.com/unit-mesh/unit-gen",children:"https://github.com/unit-mesh/unit-gen"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"faq-autodev-coder-model-evaluation",children:"FAQ: AutoDev Coder Model Evaluation"}),"\n",(0,i.jsx)(t.p,{children:"Still under design. Since we need to combine AutoDev instructions with languages like Java, Kotlin, TypeScript rather than the Python-centric systems commonly used in open-source models, we need to rethink our evaluation approach."}),"\n",(0,i.jsx)(t.p,{children:"Initially, we used instruction sets like OSS Instruct to supplement natural language to code generation, but found ~50,000 instructions (about 50%) were Python-related. After filtering, only ~5,000 Java instructions remained, which showed suboptimal results in AutoDev."}),"\n",(0,i.jsx)(t.h2,{id:"faq-autodev-instructions",children:"FAQ: AutoDev Instructions"}),"\n",(0,i.jsxs)(t.p,{children:["AutoDev employs contextual strategies that differ from other tools in instruction handling. Details: ",(0,i.jsx)(t.a,{href:"https://github.com/unit-mesh/auto-dev",children:"https://github.com/unit-mesh/auto-dev"})]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>d});var o=n(6540);const i={},s=o.createContext(i);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:t},e.children)}},9462:e=>{e.exports=JSON.parse('{"permalink":"/en/blog/autodev-coder","editUrl":"https://github.com/unit-mesh/auto-dev/tree/master/docs/blog/2024-01-07-autodev-coder.md","source":"@site/i18n/en/docusaurus-plugin-content-blog/2024-01-07-autodev-coder.md","title":"AutoDev Coder","description":"TL;DR:","date":"2024-01-07T00:00:00.000Z","tags":[],"readingTime":1.71,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"default","title":"AutoDev Coder","slug":"autodev-coder"},"unlisted":false,"prevItem":{"title":"AutoDev 1.5.3 Precision Test Generation","permalink":"/en/blog/2024/01/12/autodev-1-5-3"},"nextItem":{"title":"AutoDev 1.4 Scaling AI-Assisted Development","permalink":"/en/blog/2023/10/22/autodev-1-4-0"}}')}}]);