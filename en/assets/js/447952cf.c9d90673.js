"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9737],{5723:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"customize/variables","title":"Variables","description":"English version","source":"@site/docs/customize/variables.md","sourceDirName":"customize","slug":"/customize/variables","permalink":"/en/docs/customize/variables","draft":false,"unlisted":false,"editUrl":"https://github.com/unit-mesh/auto-dev/tree/master/docs/docs/customize/variables.md","tags":[],"version":"current","frontMatter":{"layout":"default","title":"Variables","parent":"Customize Features","nav_order":20,"permalink":"/customize/variables"},"sidebar":"tutorialSidebar","previous":{"title":"Team Prompts","permalink":"/en/docs/customize/team-prompts"},"next":{"title":"Agent","permalink":"/en/docs/agent/"}}');var s=n(4848),i=n(8453);const o={layout:"default",title:"Variables",parent:"Customize Features",nav_order:20,permalink:"/customize/variables"},l="Variables",c={},d=[{value:"English version",id:"english-version",level:2},{value:"\u4e2d\u6587\u7248\u672c\uff08Chinese version\uff09",id:"\u4e2d\u6587\u7248\u672cchinese-version",level:2}];function a(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"variables",children:"Variables"})}),"\n",(0,s.jsx)(t.h2,{id:"english-version",children:"English version"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"selection: Used to get the currently selected text."}),"\n",(0,s.jsxs)(t.li,{children:["commentSymbol: Used to get the comment symbol of the current language, for example: ",(0,s.jsx)(t.code,{children:"//"}),", ",(0,s.jsx)(t.code,{children:"#"}),", ",(0,s.jsx)(t.code,{children:"--"}),", ",(0,s.jsx)(t.code,{children:"/* */"}),", etc."]}),"\n",(0,s.jsx)(t.li,{children:"beforeCursor: Used to get the text before the current cursor."}),"\n",(0,s.jsx)(t.li,{children:"afterCursor: Used to get the text after the current cursor."}),"\n",(0,s.jsxs)(t.li,{children:["language: Used to get the language of the current file, for example: ",(0,s.jsx)(t.code,{children:"kotlin"}),", ",(0,s.jsx)(t.code,{children:"java"}),", ",(0,s.jsx)(t.code,{children:"python"}),", ",(0,s.jsx)(t.code,{children:"javascript"}),", etc."]}),"\n",(0,s.jsx)(t.li,{children:"fileName: Used to get the file name of the current file."}),"\n",(0,s.jsx)(t.li,{children:"filePath: Used to get the file path of the current file."}),"\n",(0,s.jsx)(t.li,{children:"methodName: Used to get the method name of the current method."}),"\n",(0,s.jsxs)(t.li,{children:["frameworkContext: Used to get the framework context of the current file, for example: ",(0,s.jsx)(t.code,{children:"spring"}),", ",(0,s.jsx)(t.code,{children:"junit"}),", ",(0,s.jsx)(t.code,{children:"mockito"}),",\netc."]}),"\n",(0,s.jsx)(t.li,{children:"all: Used to get all the variables. (since @1.8.6)"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"\u4e2d\u6587\u7248\u672cchinese-version",children:"\u4e2d\u6587\u7248\u672c\uff08Chinese version\uff09"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"selection: \u7528\u4e8e\u83b7\u53d6\u5f53\u524d\u9009\u4e2d\u7684\u6587\u672c\u3002"}),"\n",(0,s.jsxs)(t.li,{children:["commentSymbol: \u7528\u4e8e\u83b7\u53d6\u5f53\u524d\u8bed\u8a00\u7684\u6ce8\u91ca\u7b26\u53f7\uff0c\u4f8b\u5982\uff1a",(0,s.jsx)(t.code,{children:"//"}),"\u3001",(0,s.jsx)(t.code,{children:"#"}),"\u3001",(0,s.jsx)(t.code,{children:"--"}),"\u3001",(0,s.jsx)(t.code,{children:"/* */"})," \u7b49\u3002"]}),"\n",(0,s.jsx)(t.li,{children:"beforeCursor: \u7528\u4e8e\u83b7\u53d6\u5f53\u524d\u5149\u6807\u524d\u7684\u6587\u672c\u3002"}),"\n",(0,s.jsx)(t.li,{children:"afterCursor: \u7528\u4e8e\u83b7\u53d6\u5f53\u524d\u5149\u6807\u540e\u7684\u6587\u672c\u3002"}),"\n",(0,s.jsxs)(t.li,{children:["language: \u7528\u4e8e\u83b7\u53d6\u5f53\u524d\u6587\u4ef6\u7684\u8bed\u8a00\uff0c\u4f8b\u5982\uff1a",(0,s.jsx)(t.code,{children:"kotlin"}),"\u3001",(0,s.jsx)(t.code,{children:"java"}),"\u3001",(0,s.jsx)(t.code,{children:"python"}),"\u3001",(0,s.jsx)(t.code,{children:"javascript"})," \u7b49\u3002"]}),"\n",(0,s.jsx)(t.li,{children:"fileName: \u7528\u4e8e\u83b7\u53d6\u5f53\u524d\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u3002"}),"\n",(0,s.jsx)(t.li,{children:"filePath: \u7528\u4e8e\u83b7\u53d6\u5f53\u524d\u6587\u4ef6\u7684\u6587\u4ef6\u8def\u5f84\u3002"}),"\n",(0,s.jsx)(t.li,{children:"methodName: \u7528\u4e8e\u83b7\u53d6\u5f53\u524d\u65b9\u6cd5\u7684\u65b9\u6cd5\u540d\u3002"}),"\n",(0,s.jsxs)(t.li,{children:["frameworkContext: \u7528\u4e8e\u83b7\u53d6\u5f53\u524d\u6587\u4ef6\u7684\u6846\u67b6\u4e0a\u4e0b\u6587\uff0c\u4f8b\u5982\uff1a",(0,s.jsx)(t.code,{children:"spring"}),"\u3001",(0,s.jsx)(t.code,{children:"junit"}),"\u3001",(0,s.jsx)(t.code,{children:"mockito"})," \u7b49\u3002"]}),"\n",(0,s.jsx)(t.li,{children:"all: \u7528\u4e8e\u83b7\u53d6\u6240\u6709\u53d8\u91cf\u3002 (since @1.8.6)"}),"\n"]}),"\n",(0,s.jsx)(t.h1,{id:"methods",children:"Methods"}),"\n",(0,s.jsxs)(t.p,{children:["use ",(0,s.jsx)(t.code,{children:"@context.methodName()"})," to call the method."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-kotlin",children:"interface TeamContextProvider {\n    /**\n     * Retrieves the code of the target file associated with the given test name.\n     *\n     * @param methodName the name of the test\n     * @return the code of the target file as a string\n     */\n    fun underTestFileCode(methodName: String): String\n\n    /**\n     * Retrieves the code of the target method associated with the given test name.\n     *\n     * @param methodName the name of the test for which to retrieve the target method code\n     * @return the code of the target method as a string\n     */\n    fun underTestMethodCode(methodName: String): String\n\n    /**\n     * Returns a list of similar chunks.\n     *\n     * This method retrieves a list of similar chunks based on a certain criteria. The chunks are represented as strings.\n     *\n     * @return a list of similar chunks as strings\n     */\n    fun similarChunks(): String\n\n    /**\n     * Returns the related code for the given method.\n     *\n     * This method retrieves the related code that is associated with the current method. The related code\n     * can be used to understand the context or dependencies of the method.\n     *\n     * @return The related code as a string.\n     */\n    fun relatedCode(): String\n}\n"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var r=n(6540);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);