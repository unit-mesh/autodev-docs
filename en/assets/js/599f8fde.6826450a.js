"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1031],{3001:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"workflow/auto-sql","title":"AutoSQL","description":"Required Intellij Plugin: Database Tools and SQL","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/workflow/auto-sql.md","sourceDirName":"workflow","slug":"/workflow/auto-sql","permalink":"/en/workflow/auto-sql","draft":false,"unlisted":false,"editUrl":"https://github.com/unit-mesh/auto-dev/tree/master/docs/docs/workflow/auto-sql.md","tags":[],"version":"current","frontMatter":{"layout":"default","title":"AutoSQL","nav_order":2,"parent":"Workflow"},"sidebar":"tutorialSidebar","previous":{"title":"AutoPage","permalink":"/en/workflow/auto-page"},"next":{"title":"AutoTest","permalink":"/en/workflow/auto-test"}}');var s=n(4848),o=n(8453);const a={layout:"default",title:"AutoSQL",nav_order:2,parent:"Workflow"},i=void 0,l={},c=[{value:"Prompt Override",id:"prompt-override",level:2},{value:"Current Prompt",id:"current-prompt",level:3}];function u(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Required Intellij Plugin: Database Tools and SQL"}),"\n",(0,s.jsxs)(t.p,{children:["Demo Video: ",(0,s.jsx)(t.a,{href:"https://www.bilibili.com/video/BV1Ye411h7Qu/",children:"https://www.bilibili.com/video/BV1Ye411h7Qu/"})]}),"\n",(0,s.jsx)(t.p,{children:"implementation: cc.unitmesh.database.flow.AutoSqlFlow"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"user should connect to DataSource/Database"}),"\n",(0,s.jsx)(t.li,{children:"based on user input, AI select the target tables."}),"\n",(0,s.jsxs)(t.li,{children:["generate the SQL scripts for the target tables.","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"generate columns of selected tables."}),"\n",(0,s.jsx)(t.li,{children:"generate SQL scripts for selected tables."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"prompt-override",children:"Prompt Override"}),"\n",(0,s.jsx)(t.p,{children:"Steps:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["step 1: ",(0,s.jsx)(t.code,{children:"prompts/genius/sql/sql-gen-clarify.vm"})]}),"\n",(0,s.jsxs)(t.li,{children:["step 2: ",(0,s.jsx)(t.code,{children:"prompts/genius/sql/sql-gen-design.vm"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Context:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-kotlin",children:"data class AutoSqlContext(\n   val requirement: String,\n   val databaseVersion: String,\n   val schemaName: String,\n   val tableNames: List<String>,\n   /**\n    * Step 2.\n    * A list of table names to retrieve the columns from.\n    */\n   var tableInfos: List<String> = emptyList(),\n)\n"})}),"\n",(0,s.jsx)(t.h3,{id:"current-prompt",children:"Current Prompt"}),"\n",(0,s.jsx)(t.p,{children:"Clarify:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-markdown",children:"    You are a professional Database Administrator.\n    According to the user's requirements, you should choose the best Tables for the user in List.\n    \n    \u2014 User use database: ${context.databaseVersion}\n    - User schema name: ${context.schemaName}\n    - User tables: ${context.tableNames}\n    \n    For example:\n    \n    - Question(requirements): calculate the average trip length by subscriber type.// User tables: trips, users, subscriber_type\n    - You should anwser: [trips, subscriber_type]\n    \n    ----\n    \n    Here are the User requirements:\n    \n    ${context.requirement}\n    \n    Please choose the best Tables for the user, just return the table names in a list, no explain.\n"})}),"\n",(0,s.jsx)(t.p,{children:"Design:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-markdown",children:"    You are a professional Database Administrator.\n    According to the user's requirements, and Tables info, write SQL for the user.\n    \n    \u2014 User use database: ${context.databaseVersion}\n    - User schema name: ${context.schemaName}\n    - User tableInfos: ${context.tableInfos}\n    \n    For example:\n    \n    - Question(requirements): calculate the average trip length by subscriber type.\n    // table `subscriber_type`: average_trip_length: int, subscriber_type: string\n    - Answer:\n\n    select average_trip_length from subscriber_type where subscriber_type = 'subscriber'\n    \n    ----\n    \n    Here are the requirements:\n\n    ${context.requirement}\n    \n    Please write your SQL with Markdown syntax, no explanation is needed. :\n"})})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var r=n(6540);const s={},o=r.createContext(s);function a(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);