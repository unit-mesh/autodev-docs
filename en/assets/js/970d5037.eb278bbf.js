"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5062],{8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var i=t(6540);const a={},s=i.createContext(a);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(s.Provider,{value:n},e.children)}},8516:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"development/custom-language","title":"Custom Language","description":"improve language support","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/development/custom-language.md","sourceDirName":"development","slug":"/development/custom-language","permalink":"/en/development/custom-language","draft":false,"unlisted":false,"editUrl":"https://github.com/unit-mesh/auto-dev/tree/master/docs/docs/development/custom-language.md","tags":[],"version":"current","frontMatter":{"layout":"default","title":"Custom Language","parent":"Development","nav_order":11,"permalink":"/custom/language"},"sidebar":"developmentSidebar","previous":{"title":"Compatible Strategy","permalink":"/en/development/compatible-strategy"},"next":{"title":"Debug New Language","permalink":"/en/development/debug-new-language"}}');var a=t(4848),s=t(8453);const o={layout:"default",title:"Custom Language",parent:"Development",nav_order:11,permalink:"/custom/language"},l="Custom Language",r={},c=[{value:"improve language support",id:"improve-language-support",level:2},{value:"Extension Points",id:"extension-points",level:3},{value:"Java/IDEA Example",id:"javaidea-example",level:4}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"custom-language",children:"Custom Language"})}),"\n",(0,a.jsx)(n.h2,{id:"improve-language-support",children:"improve language support"}),"\n",(0,a.jsx)(n.p,{children:"We referenced the multi-language support implementation of JetBrains AI Assistant and combined it with the design\nprinciples of AutoDev to design a series of extension points."}),"\n",(0,a.jsx)(n.p,{children:"We referenced the multi-target support implementation of Intellij Rust plugin and combined it with the design."}),"\n",(0,a.jsx)(n.p,{children:"For a new language, you need to implement:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["create a new module in ",(0,a.jsx)(n.code,{children:"settings.gradle.kts"}),", like: ",(0,a.jsx)(n.code,{children:"webstorm"}),", ",(0,a.jsx)(n.code,{children:"pycharm"})," ...,"]}),"\n",(0,a.jsxs)(n.li,{children:["config in  ",(0,a.jsx)(n.code,{children:"build.gradle.kts"})," for new module."]}),"\n",(0,a.jsx)(n.li,{children:"sync Gradle in Intellij IDEA"}),"\n",(0,a.jsxs)(n.li,{children:["create xml file in ",(0,a.jsx)(n.code,{children:"resources/META-INF"})," like ",(0,a.jsx)(n.code,{children:"cc.unitmesh.pycharm.xml"}),", and import\nto ",(0,a.jsx)(n.code,{children:"plugin/src/main/resources/META-INF/plugin.xml"})]}),"\n",(0,a.jsx)(n.li,{children:"create extension points"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Gradle example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'project(":pycharm") {\n    intellij {\n        version.set(pycharmVersion)\n        plugins.set(pycharmPlugins)\n    }\n    dependencies {\n        implementation(project(":"))\n    }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"extension-points",children:"Extension Points"}),"\n",(0,a.jsx)(n.p,{children:"JetBrains AI Assistant Extension Points:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:'\n<extensionPoints>\n    <extensionPoint qualifiedName="cc.unitmesh.fileContextBuilder"\n                    beanClass="com.intellij.lang.LanguageExtensionPoint" dynamic="true">\n        <with attribute="implementationClass"\n              implements="cc.unitmesh.devti.context.builder.FileContextBuilder"/>\n    </extensionPoint>\n\n    <extensionPoint qualifiedName="cc.unitmesh.classContextBuilder"\n                    beanClass="com.intellij.lang.LanguageExtensionPoint" dynamic="true">\n        <with attribute="implementationClass"\n              implements="cc.unitmesh.devti.context.builder.ClassContextBuilder"/>\n    </extensionPoint>\n\n    <extensionPoint qualifiedName="cc.unitmesh.methodContextBuilder"\n                    beanClass="com.intellij.lang.LanguageExtensionPoint" dynamic="true">\n        <with attribute="implementationClass"\n              implements="cc.unitmesh.devti.context.builder.MethodContextBuilder"/>\n    </extensionPoint>\n\n    <extensionPoint qualifiedName="cc.unitmesh.variableContextBuilder"\n                    beanClass="com.intellij.lang.LanguageExtensionPoint" dynamic="true">\n        <with attribute="implementationClass"\n              implements="cc.unitmesh.devti.context.builder.VariableContextBuilder"/>\n    </extensionPoint>\n</extensionPoints>\n'})}),"\n",(0,a.jsx)(n.p,{children:"AutoDev Extension Points:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:'\n<extensionPoints>\n    <extensionPoint qualifiedName="cc.unitmesh.contextPrompter"\n                    interface="cc.unitmesh.devti.provider.ContextPrompter"\n                    dynamic="true"/>\n</extensionPoints>\n'})}),"\n",(0,a.jsx)(n.h4,{id:"javaidea-example",children:"Java/IDEA Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:'<extensions defaultExtensionNs="cc.unitmesh">\n    \x3c!-- Language support   --\x3e\n    <classContextBuilder language="JAVA"\n                         implementationClass="cc.unitmesh.ide.idea.context.JavaClassContextBuilder"/>\n\n    <methodContextBuilder language="JAVA"\n                          implementationClass="cc.unitmesh.ide.idea.context.JavaMethodContextBuilder"/>\n\n    <fileContextBuilder language="JAVA"\n                        implementationClass="cc.unitmesh.ide.idea.context.JavaFileContextBuilder"/>\n\n    <variableContextBuilder language="JAVA"\n                            implementationClass="cc.unitmesh.ide.idea.context.JavaVariableContextBuilder"/>\n\n    \x3c!-- TechStack Binding --\x3e\n    <extensionPoint qualifiedName="cc.unitmesh.contextPrompter"\n                    interface="cc.unitmesh.devti.provider.ContextPrompter"\n                    dynamic="true"/>\n  \n    <extensionPoint qualifiedName="cc.unitmesh.testContextProvider"\n                    interface="cc.unitmesh.devti.provider.WriteTestService"\n                    dynamic="true"/>\n  \n    <extensionPoint qualifiedName="cc.unitmesh.chatContextProvider"\n                    interface="cc.unitmesh.devti.provider.context.ChatContextProvider"\n                    dynamic="true"/>\n</extensions>\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);