"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4431],{5044:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"mcp/development","title":"Develop MCP Server","description":"Build Server","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/mcp/development.md","sourceDirName":"mcp","slug":"/mcp/development","permalink":"/en/mcp/development","draft":false,"unlisted":false,"editUrl":"https://github.com/unit-mesh/auto-dev/tree/master/docs/docs/mcp/development.md","tags":[],"version":"current","frontMatter":{"layout":"default","title":"Develop MCP Server","nav_order":3,"parent":"MCP","permalink":"/mcp/development"},"sidebar":"agenticSidebar","previous":{"title":"MCP","permalink":"/en/mcp/"},"next":{"title":"AutoDev as MCP Client","permalink":"/en/mcp/mcp-client"}}');var o=t(4848),i=t(8453);const s={layout:"default",title:"Develop MCP Server",nav_order:3,parent:"MCP",permalink:"/mcp/development"},c=void 0,l={},a=[{value:"Build Server",id:"build-server",level:2},{value:"Test Your Server with RPC Command",id:"test-your-server-with-rpc-command",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"build-server",children:"Build Server"}),"\n",(0,o.jsx)(n.p,{children:"Resources"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://modelcontextprotocol.io/quickstart/server",children:"MCP For Server Developers"})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Since MVP Specification has different version, we recommend you keep same with AutoDev"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Kotlin SDK: io.modelcontextprotocol:kotlin-sdk:0.4.0"}),"\n",(0,o.jsx)(n.li,{children:"Java SDK: io.modelcontextprotocol.sdk:mcp:0.8.1"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"test-your-server-with-rpc-command",children:"Test Your Server with RPC Command"}),"\n",(0,o.jsx)(n.p,{children:"Start the server, and paste follow message:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{"id":4,"method":"initialize","params":{"protocolVersion":"2024-11-05","capabilities":{"experimental":{},"sampling":{}},"clientInfo":{"name":"weather","version":"1.0.0"},"_meta":{},"method":"initialize"},"jsonrpc":"2.0"}\n'})}),"\n",(0,o.jsx)(n.p,{children:"Success response example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{"jsonrpc":"2.0","id":4,"result":{"protocolVersion":"2024-11-05","capabilities":{"logging":{},"tools":{"listChanged":true}},"serverInfo":{"name":"my-weather-server","version":"0.0.1"}}}\n'})}),"\n",(0,o.jsx)(n.p,{children:"Error response example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{"jsonrpc":"2.0","id":4,"error":{"code":-32603,"message":"Unrecognized field \\"_meta\\" (class io.modelcontextprotocol.spec.McpSchema$InitializeRequest), not marked as ignorable (3 known properties: \\"protocolVersion\\", \\"clientInfo\\", \\"capabilities\\"])\\n at [Source: UNKNOWN; byte offset: #UNKNOWN] (through reference chain: io.modelcontextprotocol.spec.McpSchema$InitializeRequest[\\"_meta\\"])"}}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var r=t(6540);const o={},i=r.createContext(o);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);