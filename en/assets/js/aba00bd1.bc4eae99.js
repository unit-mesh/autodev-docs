"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[542],{2437:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"customize/custom-action","title":"Custom Action","description":"You can customize your prompt in Settings -> Tools -> AutoDev","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/customize/custom-action.md","sourceDirName":"customize","slug":"/customize/custom-action","permalink":"/en/customize/custom-action","draft":false,"unlisted":false,"editUrl":"https://github.com/unit-mesh/auto-dev/tree/master/docs/docs/customize/custom-action.md","tags":[],"version":"current","frontMatter":{"layout":"default","title":"Custom Action","parent":"Customize Features","nav_order":10,"permalink":"/custom/action"},"sidebar":"customizeSidebar","previous":{"title":"Batch AI Action","permalink":"/en/customize/batch-ai-action"},"next":{"title":"Custom extension Context Agent","permalink":"/en/customize/custom-ext-contenxt-agent"}}');var i=n(4848),s=n(8453);const l={layout:"default",title:"Custom Action",parent:"Customize Features",nav_order:10,permalink:"/custom/action"},r="Custom Action",a={},c=[{value:"Variables",id:"variables",level:2},{value:"Template Examples",id:"template-examples",level:3}];function u(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"custom-action",children:"Custom Action"})}),"\n",(0,i.jsxs)(t.p,{children:["You can customize your prompt in ",(0,i.jsx)(t.code,{children:"Settings"})," -> ",(0,i.jsx)(t.code,{children:"Tools"})," -> ",(0,i.jsx)(t.code,{children:"AutoDev"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "spec": {\n    "controller": "- Use BeanUtils.copyProperties in the Controller for DTO to Entity conversion.\\n- Avoid using Autowired.\\n- Use Swagger Annotations to indicate API meanings.\\n- Controller methods should capture and handle business exceptions, rather than throwing system exceptions.",\n    "service": "- Service layer should use constructor injection or setter injection; avoid using the @Autowired annotation.",\n    "entity": "- Entity classes should use JPA annotations for database mapping.\\n- The entity class name should match the corresponding database table name. Entity classes should use annotations to mark primary keys and table names, for example: @Id, @GeneratedValue, @Table, etc.",\n    "repository": "- Repository interfaces should extend the JpaRepository interface to inherit basic CRUD operations.",\n    "ddl": "- Fields should be constrained with NOT NULL constraints to ensure data integrity."\n  },\n  "prompts": [\n    {\n      "title": " Code complete",\n      "autoInvoke": true,\n      "matchRegex": ".*",\n      "priority": 1,\n      "template": "Code complete:\\n${METHOD_INPUT_OUTPUT}\\n${SPEC_controller}\\n\\n${SELECTION}"\n    },\n    {\n      "title": " Translate to Kotlin",\n      "autoInvoke": false,\n      "matchRegex": ".*",\n      "priority": 0,\n      "template": "Translate the following code to Kotlin.\\n${SIMILAR_CHUNK}\\nCompare these snippets:\\n${METHOD_INPUT_OUTPUT}\\nHere is the code:\\n${SELECTION}"\n    }\n  ]\n}\n'})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"title: the action name"}),"\n",(0,i.jsx)(t.li,{children:"autoInvoke: auto invoke this action when you perform action"}),"\n",(0,i.jsx)(t.li,{children:"matchRegex: TODO()"}),"\n",(0,i.jsx)(t.li,{children:"priority: the priority of the action, the higher will be first. (0~1000 was recommended)"}),"\n",(0,i.jsxs)(t.li,{children:["template: the template of the action, you can use ",(0,i.jsx)(t.code,{children:"${SPEC_controller}"})," to insert spec, ",(0,i.jsx)(t.code,{children:"${SELECTION}"})," to insert\nselected code."]}),"\n",(0,i.jsxs)(t.li,{children:["selectedRegex (since @1.8.3 from ",(0,i.jsx)(t.a,{href:"https://github.com/unit-mesh/auto-dev/pull/174",children:"#174"}),"): the regex to match the selected code"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"variables",children:"Variables"}),"\n",(0,i.jsx)(t.p,{children:"Context Variable:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"${SELECTION}"}),": the selected code"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"${SIMILAR_CHUNK}"}),": the similar code chunk"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"${METHOD_INPUT_OUTPUT}"}),": the method input and output"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Spec variables:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"${SPEC_*}"}),": load spec from ",(0,i.jsx)(t.code,{children:"spec"})," section in config, like ",(0,i.jsx)(t.code,{children:"${SPEC_controller}"})," will load ",(0,i.jsx)(t.code,{children:"spec.controller"})," from\nconfig."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"template-examples",children:"Template Examples"}),"\n",(0,i.jsx)(t.p,{children:"Config:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "title": "\\uD83C\\uDF10\\uD83C\\uDF10 Translate to Kotlin",\n  "autoInvoke": false,\n  "matchRegex": ".*",\n  "priority": 0,\n  "template": "Translate follow code to Kotlin. Similar chunk: ${SIMILAR_CHUNK} Compare this snippets: ${METHOD_INPUT_OUTPUT}\\n \\n${SELECTION}"\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"Output example:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'Translate follow code to Kotlin. Similar chunk: // Compare this snippet from java/cc/unitmesh/untitled/demo/controller/CommentController.java:\n// public class CommentController {\n// Compare this snippet from java/cc/unitmesh/untitled/demo/DemoApplication.java:\n// public class DemoApplication {\n// Compare this snippet from java/cc/unitmesh/untitled/demo/controller/AdvertiseController.java:\n// public class AdvertiseController {\n// Compare this snippet from java/cc/unitmesh/untitled/demo/dto/BookMeetingRoomRequest.java:\n// public class BookMeetingRoomRequest {\n// Compare this snippet from java/cc/unitmesh/untitled/demo/entity/MeetingRoom.java:\n// public class MeetingRoom {\n// Compare this snippet from java/cc/unitmesh/untitled/demo/controller/BlogController.java:\n//     @ApiOperation(value = "Create a new blog")\n// Compare this snippet from java/cc/unitmesh/untitled/demo/controller/BlogControllerTest.java:\n// class BlogControllerTest {\n// Compare this snippet from java/cc/unitmesh/untitled/demo/DemoApplicationTests.java:\n// class DemoApplicationTests {\n// Compare this snippet from java/cc/unitmesh/untitled/demo/service/BlogService.java:\n// public class BlogService {\n// Compare this snippet from java/cc/unitmesh/untitled/demo/dto/CreateBlogRequest.java:\n// public class CreateBlogRequest {\n// Compare this snippet from java/cc/unitmesh/untitled/demo/controller/BlogCategoryController.java:\n// public class BlogCategoryController {\n// Compare this snippet from java/cc/unitmesh/untitled/demo/dto/MeetingRoomDetailsResponse.java:\n// public class MeetingRoomDetailsResponse { Compare this snippets: //  class CreateBlogRequest {\n//    title\n//    content\n//    \n//  }//  class BlogPost {\n//    id\n//    title\n//    content\n//    author\n//    + public BlogPost(String title, String content, String author)\n//    + public BlogPost()\n//    + public Long getId()\n//    + public String getTitle()\n//    + public void setTitle(String title)\n//    + public String getContent()\n//    + public void setContent(String content)\n//    + public String getAuthor()\n//    + public void setAuthor(String author)\n//  }\n\n\\`\\`\\`Java\n// create blog\n    @ApiOperation(value = "Create a new blog")\n    @PostMapping("/")\n    public BlogPost createBlog(@RequestBody CreateBlogRequest request) {\n        CreateBlogResponse response = new CreateBlogResponse();\n        BlogPost blogPost = new BlogPost();\n        BeanUtils.copyProperties(request, blogPost);\n        BlogPost createdBlog = blogService.createBlog(blogPost);\n        BeanUtils.copyProperties(createdBlog, response);\n        return createdBlog;\n    }\n\\`\\`\\`\n'})})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>r});var o=n(6540);const i={},s=o.createContext(i);function l(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);